@using OnlineMongoMigrationProcessor
@using System.Text.RegularExpressions;

<div class="modal fade show d-block bg-dark bg-opacity-75" id="myModal" aria-modal="true" role="dialog">
    <div class="modal-dialog bg-dark">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Edit Configuration Settings</h4>
                <button type="button" class="btn-close" aria-label="Close" @onclick="@Cancel"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="mongo-url" class="form-label">Mongo Tools Download URL:</label>
                    <input type="text" id="mongo-url" class="form-control" @bind="configuration.MongoToolsDownloadUrl" />
                </div>
                <div class="mb-3">
                    <label for="has-uuid" class="form-label">UUID used in _id :</label>
                    <input type="checkbox" id="has-uuid" @bind="configuration.HasUuid" />
                </div>
                <div class="mb-3">
                    <label for="chunk-size" class="form-label">Chunk Size (in MB) for MongoDump:</label>
                    <input type="number" id="chunk-size" class="form-control" @bind="configuration.ChunkSizeInMb" />
                </div>

                <div class="mb-3">
                    <label for="csbatchsize" class="form-label">Change Stream Batch Size:</label>
                    <input type="number" id="csbatchsize" class="form-control" @bind="configuration.ChangeStreamBatchSize" />
                </div>

                <div class="mb-3">
                    <label for="csbatchsize" class="form-label">Mongo Copy Page Size:</label>
                    <input type="number" id="csbatchsize" class="form-control" @bind="configuration.MongoCopyPageSize" />
                </div>

                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger mt-2">@errorMessage</div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick=@HandleSubmit>Ok</button>
                <button type="button" class="btn btn-secondary" @onclick="@Cancel">Cancel</button>
            </div>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public OnlineMongoMigrationProcessor.Models.MigrationSettings? configuration { get; set; }

    [Parameter]
    public EventCallback<OnlineMongoMigrationProcessor.Models.MigrationSettings> OnConfigurationSaved { get; set; }

    private string errorMessage = string.Empty;

    private void HandleSubmit()
    {
        if (configuration.MongoCopyPageSize < 50 || configuration.MongoCopyPageSize > 40000)
        {
            errorMessage = "Page Size should be between 50 and 40000.";
            return;
        }

        if (configuration.ChangeStreamBatchSize < 100 || configuration.ChangeStreamBatchSize > 1000000) // Fixed condition to compare correctly
        {
            errorMessage = "Batch Size should be between 100 and 1000000."; // Corrected error message
            return;
        }

        if (configuration.ChunkSizeInMb < 2 || configuration.ChunkSizeInMb > 5120)
        {
            errorMessage = "Chunk Size (in MB) should be between 2 and 5120.";
            return;
        }

        if (!Regex.Match(configuration.MongoToolsDownloadUrl, @"^https://.*\.zip$").Success)
        {
            errorMessage = "URL must start with 'https://' and end with '.zip'.";
            return;
        }

        if (OnConfigurationSaved.HasDelegate)
        {
            OnConfigurationSaved.InvokeAsync(configuration);
        }
    }

    private void Cancel()
    {
        if (OnConfigurationSaved.HasDelegate)
        {
            OnConfigurationSaved.InvokeAsync(null);
        }
    }
}

